import * as React from 'react';
import { CanvasPath, ExportImageType, Point } from '../types';
export declare type CanvasProps = {
    paths: CanvasPath[];
    isDrawing: boolean;
    className: string;
    onPointerDown: (point: Point) => void;
    onPointerMove: (point: Point) => void;
    onPointerUp: () => void;
    width: string;
    height: string;
    canvasColor: string;
    backgroundImage: string;
    exportWithBackgroundImage: boolean;
    preserveBackgroundImageAspectRatio: string;
    allowOnlyPointerType: string;
    style: React.CSSProperties;
};
export declare class Canvas extends React.Component<CanvasProps> {
    canvas: React.RefObject<HTMLDivElement>;
    static defaultProps: {
        width: string;
        height: string;
        className: string;
        canvasColor: string;
        backgroundImage: string;
        exportWithBackgroundImage: boolean;
        preserveBackgroundImageAspectRatio: string;
        allowOnlyPointerType: string;
        style: {
            border: string;
            borderRadius: string;
        };
        withTimeStamp: boolean;
    };
    constructor(props: CanvasProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    getCoordinates(pointerEvent: React.PointerEvent<HTMLDivElement>): Point;
    handlePointerDown(event: React.PointerEvent<HTMLDivElement>): void;
    handlePointerMove(event: React.PointerEvent<HTMLDivElement>): void;
    handlePointerUp(event: React.PointerEvent<HTMLDivElement> | PointerEvent): void;
    exportImage(imageType: ExportImageType): Promise<string>;
    exportSvg(): Promise<string>;
    render(): JSX.Element;
}

{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/SidePanel/ChatBox.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { ChatMessage, ChatTextInput } from \"@arpitbhalla/trio-calls/components/Chat\";\nimport { useMsgs } from \"core/hooks/useMsgs\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { dateToTime } from \"@arpitbhalla/trio-calls/utils/common\";\nimport { useParams } from \"react-router-dom\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  chatRoot: {\n    position: \"relative\"\n  },\n  chatBox: {\n    height: \"60vh\",\n    overflowY: \"auto\"\n  }\n}));\n\nconst ChatLayout = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    userID,\n    chat\n  } = useAppSelector(state => ({\n    userID: state.authReducer.UID,\n    chat: state.chatReducer.chat\n  }));\n  const {\n    meetID\n  } = useParams();\n  const {\n    sendMessage,\n    loading\n  } = useMsgs(meetID);\n  console.log(chat);\n  let prev = \"\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.chatRoot,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.chatBox,\n      children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : chat === null || chat === void 0 ? void 0 : chat.map((_ref, i) => {\n        let {\n          message,\n          displayName,\n          createdAt,\n          UID\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(ChatMessage, {\n          hideAvatar: true,\n          hidePrimary: prev === (prev = UID),\n          displayName: displayName,\n          isSelf: UID === userID,\n          message: message,\n          time: dateToTime(createdAt)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatTextInput, {\n      isSmall: true,\n      onSend: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatLayout, \"ASMVdgNEfln4NxLbBzblMTO74zY=\", false, function () {\n  return [useStyles, useAppSelector, useParams, useMsgs];\n});\n\n_c = ChatLayout;\nexport default ChatLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLayout\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/SidePanel/ChatBox.tsx"],"names":["React","makeStyles","Box","ChatMessage","ChatTextInput","useMsgs","useAppSelector","dateToTime","useParams","LinearProgress","useStyles","chatRoot","position","chatBox","height","overflowY","ChatLayout","classes","userID","chat","state","authReducer","UID","chatReducer","meetID","sendMessage","loading","console","log","prev","map","i","message","displayName","createdAt"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SACEC,WADF,EAEEC,aAFF,QAGO,yCAHP;AAIA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,sCAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAC,OAAO;AAClCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AADF,GADwB;AAIlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,MADD;AAEPC,IAAAA,SAAS,EAAE;AAFJ;AAJyB,CAAP,CAAD,CAA5B;;AAUA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBb,cAAc,CAAEc,KAAD,KAAY;AAClDF,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBC,GADwB;AAElDH,IAAAA,IAAI,EAAEC,KAAK,CAACG,WAAN,CAAkBJ;AAF0B,GAAZ,CAAD,CAAvC;AAIA,QAAM;AAAEK,IAAAA;AAAF,MAAahB,SAAS,EAA5B;AACA,QAAM;AAAEiB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA2BrB,OAAO,CAACmB,MAAD,CAAxC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,MAAIU,IAAI,GAAG,EAAX;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACN,QAAxB;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEM,OAAO,CAACJ,OAAxB;AAAA,gBACGa,OAAO,gBACN,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAGNP,IAHM,aAGNA,IAHM,uBAGNA,IAAI,CAAEW,GAAN,CAAU,OAA2CC,CAA3C;AAAA,YAAC;AAAEC,UAAAA,OAAF;AAAWC,UAAAA,WAAX;AAAwBC,UAAAA,SAAxB;AAAmCZ,UAAAA;AAAnC,SAAD;AAAA,4BACR,QAAC,WAAD;AAEE,UAAA,UAAU,MAFZ;AAGE,UAAA,WAAW,EAAEO,IAAI,MAAMA,IAAI,GAAGP,GAAb,CAHnB;AAIE,UAAA,WAAW,EAAEW,WAJf;AAKE,UAAA,MAAM,EAAEX,GAAG,KAAKJ,MALlB;AAME,UAAA,OAAO,EAAEc,OANX;AAOE,UAAA,IAAI,EAAEzB,UAAU,CAAC2B,SAAD;AAPlB,WACOH,CADP;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA,OAAV;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,aAAD;AAAe,MAAA,OAAO,MAAtB;AAAuB,MAAA,MAAM,EAAEN;AAA/B;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjCD;;GAAMT,U;UACYN,S,EACSJ,c,EAINE,S,EACcH,O;;;KAP7BW,U;AAkCN,eAAeA,UAAf","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  ChatMessage,\n  ChatTextInput,\n} from \"@arpitbhalla/trio-calls/components/Chat\";\nimport { useMsgs } from \"core/hooks/useMsgs\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { dateToTime } from \"@arpitbhalla/trio-calls/utils/common\";\nimport { useParams } from \"react-router-dom\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  chatRoot: {\n    position: \"relative\",\n  },\n  chatBox: {\n    height: \"60vh\",\n    overflowY: \"auto\",\n  },\n}));\n\nconst ChatLayout: React.FC = () => {\n  const classes = useStyles();\n  const { userID, chat } = useAppSelector((state) => ({\n    userID: state.authReducer.UID,\n    chat: state.chatReducer.chat,\n  }));\n  const { meetID } = useParams<{ meetID: string }>();\n  const { sendMessage, loading } = useMsgs(meetID);\n\n  console.log(chat);\n  let prev = \"\";\n  return (\n    <Box className={classes.chatRoot}>\n      <Box className={classes.chatBox}>\n        {loading ? (\n          <LinearProgress />\n        ) : (\n          chat?.map(({ message, displayName, createdAt, UID }, i) => (\n            <ChatMessage\n              key={i}\n              hideAvatar\n              hidePrimary={prev === (prev = UID)}\n              displayName={displayName}\n              isSelf={UID === userID}\n              message={message}\n              time={dateToTime(createdAt)}\n            />\n          ))\n        )}\n      </Box>\n      <ChatTextInput isSmall onSend={sendMessage} />\n    </Box>\n  );\n};\nexport default ChatLayout;\n"]},"metadata":{},"sourceType":"module"}
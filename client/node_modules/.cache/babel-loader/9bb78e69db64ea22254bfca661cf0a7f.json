{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport axiosFetch from \"./axios.fetch\";\nexport const getMeet = (meetID, UID) => __awaiter(void 0, void 0, void 0, function* () {\n  return new Promise((resolve, reject) => {\n    return axiosFetch.post(\"/getMeet\", {\n      meetID,\n      UID\n    }).then(res => {\n      if (res.status === 200) {\n        resolve(res.data);\n      } else reject(res.data.message);\n    });\n  });\n});\nexport const newMeet = _ref => {\n  let {\n    hostID,\n    invitees,\n    title,\n    type,\n    time\n  } = _ref;\n  return __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      return axiosFetch.post(\"/newMeet\", {\n        hostID,\n        invitees,\n        title,\n        type,\n        time\n      }).then(res => {\n        if (res.status === 200) {\n          resolve(res.data);\n        } else reject(res.data.message);\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/node_modules/@arpitbhalla/trio-calls/utils/meeting.fetch.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","axiosFetch","getMeet","meetID","UID","post","res","status","data","message","newMeet","hostID","invitees","title","type","time"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axiosFetch from \"./axios.fetch\";\nexport const getMeet = (meetID, UID) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        return axiosFetch\n            .post(\"/getMeet\", {\n            meetID,\n            UID,\n        })\n            .then((res) => {\n            if (res.status === 200) {\n                resolve(res.data);\n            }\n            else\n                reject(res.data.message);\n        });\n    });\n});\nexport const newMeet = ({ hostID, invitees, title, type, time, }) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        return axiosFetch\n            .post(\"/newMeet\", {\n            hostID,\n            invitees,\n            title,\n            type,\n            time,\n        })\n            .then((res) => {\n            if (res.status === 200) {\n                resolve(res.data);\n            }\n            else\n                reject(res.data.message);\n        });\n    });\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // State for Active User\n\nexport const mediaStore = createSlice({\n  name: \"mediaDevices\",\n  initialState: {\n    isAudio: true,\n    isVideo: true,\n    isHand: false,\n    isScreenShare: false,\n    isWhiteBoard: false\n  },\n  reducers: {\n    toggleAudio: (state, action) => {\n      var _action$payload;\n\n      state.isAudio = (_action$payload = action.payload) !== null && _action$payload !== void 0 ? _action$payload : !state.isAudio;\n    },\n    toggleVideo: (state, action) => {\n      var _action$payload2;\n\n      state.isVideo = (_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 ? _action$payload2 : !state.isVideo;\n    },\n    toggleHand: (state, action) => {\n      var _action$payload3;\n\n      state.isHand = (_action$payload3 = action.payload) !== null && _action$payload3 !== void 0 ? _action$payload3 : !state.isHand;\n    },\n    toggleScreen: (state, action) => {\n      var _action$payload4;\n\n      state.isScreenShare = (_action$payload4 = action.payload) !== null && _action$payload4 !== void 0 ? _action$payload4 : !state.isScreenShare;\n    },\n    toggleWhiteBoard: (state, action) => {\n      var _action$payload5;\n\n      state.isWhiteBoard = (_action$payload5 = action.payload) !== null && _action$payload5 !== void 0 ? _action$payload5 : !state.isWhiteBoard;\n    }\n  }\n});\nexport const {\n  toggleAudio,\n  toggleHand,\n  toggleVideo,\n  toggleScreen,\n  toggleWhiteBoard\n} = mediaStore.actions;\nexport default mediaStore.reducer;","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/core/reducers/media.ts"],"names":["createSlice","mediaStore","name","initialState","isAudio","isVideo","isHand","isScreenShare","isWhiteBoard","reducers","toggleAudio","state","action","payload","toggleVideo","toggleHand","toggleScreen","toggleWhiteBoard","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAE,cAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,IADG;AAEZC,IAAAA,OAAO,EAAE,IAFG;AAGZC,IAAAA,MAAM,EAAE,KAHI;AAIZC,IAAAA,aAAa,EAAE,KAJH;AAKZC,IAAAA,YAAY,EAAE;AALF,GAFsB;AASpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AAC9BD,MAAAA,KAAK,CAACP,OAAN,sBAAgBQ,MAAM,CAACC,OAAvB,6DAAkC,CAACF,KAAK,CAACP,OAAzC;AACD,KAHO;AAIRU,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AAC9BD,MAAAA,KAAK,CAACN,OAAN,uBAAgBO,MAAM,CAACC,OAAvB,+DAAkC,CAACF,KAAK,CAACN,OAAzC;AACD,KANO;AAORU,IAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AAC7BD,MAAAA,KAAK,CAACL,MAAN,uBAAeM,MAAM,CAACC,OAAtB,+DAAiC,CAACF,KAAK,CAACL,MAAxC;AACD,KATO;AAURU,IAAAA,YAAY,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AAC/BD,MAAAA,KAAK,CAACJ,aAAN,uBAAsBK,MAAM,CAACC,OAA7B,+DAAwC,CAACF,KAAK,CAACJ,aAA/C;AACD,KAZO;AAaRU,IAAAA,gBAAgB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAAA;;AACnCD,MAAAA,KAAK,CAACH,YAAN,uBAAqBI,MAAM,CAACC,OAA5B,+DAAuC,CAACF,KAAK,CAACH,YAA9C;AACD;AAfO;AAT0B,CAAD,CAA9B;AA4BP,OAAO,MAAM;AACXE,EAAAA,WADW;AAEXK,EAAAA,UAFW;AAGXD,EAAAA,WAHW;AAIXE,EAAAA,YAJW;AAKXC,EAAAA;AALW,IAMThB,UAAU,CAACiB,OANR;AAQP,eAAejB,UAAU,CAACkB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n// State for Active User\nexport const mediaStore = createSlice({\n  name: \"mediaDevices\",\n  initialState: {\n    isAudio: true,\n    isVideo: true,\n    isHand: false,\n    isScreenShare: false,\n    isWhiteBoard: false,\n  },\n  reducers: {\n    toggleAudio: (state, action) => {\n      state.isAudio = action.payload ?? !state.isAudio;\n    },\n    toggleVideo: (state, action) => {\n      state.isVideo = action.payload ?? !state.isVideo;\n    },\n    toggleHand: (state, action) => {\n      state.isHand = action.payload ?? !state.isHand;\n    },\n    toggleScreen: (state, action) => {\n      state.isScreenShare = action.payload ?? !state.isScreenShare;\n    },\n    toggleWhiteBoard: (state, action) => {\n      state.isWhiteBoard = action.payload ?? !state.isWhiteBoard;\n    },\n  },\n});\n\nexport const {\n  toggleAudio,\n  toggleHand,\n  toggleVideo,\n  toggleScreen,\n  toggleWhiteBoard,\n} = mediaStore.actions;\n\nexport default mediaStore.reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { useLocalStorage } from \"core/hooks/common\";\nimport { useSnackbar } from \"notistack\";\nimport { updateAuth } from \"core/reducers/auth\";\nimport { useConnection } from \"core/hooks/useConnection\";\nimport LoadingPage from \"@arpitbhalla/trio-calls/components/LoadingPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = loadable(_c = () => import(\"./home/Home\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this)\n});\n_c2 = Home;\nconst Meet = loadable(_c3 = () => import(\"./meet\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this)\n});\n_c4 = Meet;\nconst Auth = loadable(_c5 = () => import(\"./auth\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this)\n});\n_c6 = Auth;\nconst Chat = loadable(_c7 = () => import(\"./chat\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this)\n});\n_c8 = Chat;\n\nconst AuthRoute = props => {\n  _s();\n\n  useConnection();\n  const history = useHistory();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    isAuth\n  } = useAppSelector(_ref => {\n    let {\n      authReducer\n    } = _ref;\n    return authReducer;\n  });\n  React.useEffect(() => {\n    if (!isAuth) {\n      history.push(\"/auth/signIn?redirect_url=\" + pathname);\n    }\n  }, [isAuth, pathname, history]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthRoute, \"z6idwhNdLgmwNmGSx9HHImiM24c=\", false, function () {\n  return [useConnection, useHistory, useLocation, useAppSelector];\n});\n\n_c9 = AuthRoute;\n\nconst Routes = () => {\n  _s2();\n\n  const [UID] = useLocalStorage(\"UID\", \"\");\n  const [loading, setLoading] = React.useState(true);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const dispatch = useAppDispatch();\n  React.useEffect(() => {\n    if (UID) {\n      const userDetails = JSON.parse(UID);\n      dispatch(updateAuth({\n        isAuth: true,\n        ...userDetails\n      }));\n      enqueueSnackbar(\"Welcome \" + userDetails.displayName);\n    }\n\n    const time = setTimeout(() => {\n      setLoading(false);\n    }, 200);\n    return () => {\n      clearTimeout(time);\n    };\n  }, [UID]);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(AuthRoute, {\n      path: \"/\",\n      exact: true,\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth\",\n      component: Auth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n      path: \"/chat\",\n      component: Chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n      path: \"/:meetID\",\n      component: Meet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Routes, \"cH7BQf6HQB/d3F+S9cW5iphnUYY=\", false, function () {\n  return [useLocalStorage, useSnackbar, useAppDispatch];\n});\n\n_c10 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Home$loadable\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"Meet$loadable\");\n$RefreshReg$(_c4, \"Meet\");\n$RefreshReg$(_c5, \"Auth$loadable\");\n$RefreshReg$(_c6, \"Auth\");\n$RefreshReg$(_c7, \"Chat$loadable\");\n$RefreshReg$(_c8, \"Chat\");\n$RefreshReg$(_c9, \"AuthRoute\");\n$RefreshReg$(_c10, \"Routes\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/index.tsx"],"names":["React","Route","Switch","useHistory","useLocation","loadable","useAppDispatch","useAppSelector","useLocalStorage","useSnackbar","updateAuth","useConnection","LoadingPage","Home","fallback","Meet","Auth","Chat","AuthRoute","props","history","pathname","isAuth","authReducer","useEffect","push","Routes","UID","loading","setLoading","useState","enqueueSnackbar","dispatch","userDetails","JSON","parse","displayName","time","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Route,\n  RouteProps,\n  Switch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { useLocalStorage } from \"core/hooks/common\";\nimport { useSnackbar } from \"notistack\";\nimport { updateAuth } from \"core/reducers/auth\";\nimport { useConnection } from \"core/hooks/useConnection\";\nimport LoadingPage from \"@arpitbhalla/trio-calls/components/LoadingPage\";\n\nconst Home = loadable(() => import(\"./home/Home\"), {\n  fallback: <LoadingPage />,\n});\nconst Meet = loadable(() => import(\"./meet\"), {\n  fallback: <LoadingPage />,\n});\nconst Auth = loadable(() => import(\"./auth\"), {\n  fallback: <LoadingPage />,\n});\nconst Chat = loadable(() => import(\"./chat\"), {\n  fallback: <LoadingPage />,\n});\n\nconst AuthRoute: React.FC<RouteProps> = (props) => {\n  useConnection();\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const { isAuth } = useAppSelector(({ authReducer }) => authReducer);\n\n  React.useEffect(() => {\n    if (!isAuth) {\n      history.push(\"/auth/signIn?redirect_url=\" + pathname);\n    }\n  }, [isAuth, pathname, history]);\n\n  return <Route {...props} />;\n};\n\nconst Routes: React.FC = () => {\n  const [UID] = useLocalStorage(\"UID\", \"\");\n  const [loading, setLoading] = React.useState(true);\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (UID) {\n      const userDetails = JSON.parse(UID);\n      dispatch(updateAuth({ isAuth: true, ...userDetails }));\n      enqueueSnackbar(\"Welcome \" + userDetails.displayName);\n    }\n    const time = setTimeout(() => {\n      setLoading(false);\n    }, 200);\n    return () => {\n      clearTimeout(time);\n    };\n  }, [UID]);\n  if (loading) return <LoadingPage />;\n  return (\n    <Switch>\n      <AuthRoute path=\"/\" exact component={Home} />\n      <Route path=\"/auth\" component={Auth} />\n      <AuthRoute path=\"/chat\" component={Chat} />\n      <AuthRoute path=\"/:meetID\" component={Meet} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const authStore = createSlice({\n  name: \"auth\",\n  initialState: {\n    displayName: \"\",\n    UID: \"\",\n    isAuth: false,\n    email: \"\"\n  },\n  reducers: {\n    updateAuth: (state, action) => {\n      state.isAuth = action.payload.isAuth;\n      state.displayName = action.payload.displayName;\n      state.UID = action.payload.UID;\n      state.email = action.payload.email;\n    },\n    updateDisplayName: (state, action) => {\n      state.displayName = action.payload;\n    }\n  }\n});\nexport const {\n  updateAuth,\n  updateDisplayName\n} = authStore.actions;\nexport default authStore.reducer;","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/core/reducers/auth.ts"],"names":["createSlice","authStore","name","initialState","displayName","UID","isAuth","email","reducers","updateAuth","state","action","payload","updateDisplayName","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,EADD;AAEZC,IAAAA,GAAG,EAAE,EAFO;AAGZC,IAAAA,MAAM,EAAE,KAHI;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAFqB;AAQnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAgD;AAC1DD,MAAAA,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACC,OAAP,CAAeN,MAA9B;AACAI,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAAP,CAAeR,WAAnC;AACAM,MAAAA,KAAK,CAACL,GAAN,GAAYM,MAAM,CAACC,OAAP,CAAeP,GAA3B;AACAK,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAAP,CAAeL,KAA7B;AACD,KANO;AAORM,IAAAA,iBAAiB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA0C;AAC3DD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACD;AATO;AARyB,CAAD,CAA7B;AAqBP,OAAO,MAAM;AAAEH,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAAoCZ,SAAS,CAACa,OAApD;AAEP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport const authStore = createSlice({\n  name: \"auth\",\n  initialState: {\n    displayName: \"\",\n    UID: \"\",\n    isAuth: false,\n    email: \"\",\n  },\n  reducers: {\n    updateAuth: (state, action: PayloadAction<typeof state>) => {\n      state.isAuth = action.payload.isAuth;\n      state.displayName = action.payload.displayName;\n      state.UID = action.payload.UID;\n      state.email = action.payload.email;\n    },\n    updateDisplayName: (state, action: PayloadAction<string>) => {\n      state.displayName = action.payload;\n    },\n  },\n});\n\nexport const { updateAuth, updateDisplayName } = authStore.actions;\n\nexport default authStore.reducer;\n"]},"metadata":{},"sourceType":"module"}
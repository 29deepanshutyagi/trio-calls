{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Picker from \"emoji-picker-react\";\nimport TagFacesIcon from \"@material-ui/icons/TagFaces\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"@material-ui/core/Popper\";\nconst useStyles = makeStyles(theme => ({\n  rootBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n    bottom: 0\n  },\n  sendIcon: {\n    marginLeft: theme.spacing(2),\n    paddingLeft: 4\n  }\n}));\n\nconst ChatTextInput = _ref => {\n  let {\n    onSend,\n    isSmall\n  } = _ref;\n  const classes = useStyles();\n  const [text, setText] = React.useState(\"\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const handleSubmit = () => {\n    if (!text) return;\n    onSend === null || onSend === void 0 ? void 0 : onSend(text);\n    setText(\"\");\n  };\n\n  return _jsxs(Box, Object.assign({\n    className: classes.rootBox\n  }, {\n    children: [_jsx(Popper, Object.assign({\n      open: Boolean(anchorEl),\n      anchorEl: anchorEl\n    }, {\n      children: _jsx(Picker, {\n        onEmojiClick: (_event, _ref2) => {\n          let {\n            emoji\n          } = _ref2;\n          setText(text + emoji);\n        }\n      })\n    })), _jsx(TextField, {\n      fullWidth: true,\n      multiline: true,\n      rowsMax: 2,\n      placeholder: \"Send a message to everyone\",\n      variant: \"outlined\",\n      value: text,\n      margin: isSmall ? \"dense\" : \"none\",\n      onChange: e => setText(e.target.value),\n      InputProps: {\n        startAdornment: !isSmall && _jsx(InputAdornment, Object.assign({\n          style: {\n            margin: 0,\n            padding: 0\n          },\n          position: \"start\"\n        }, {\n          children: _jsx(IconButton, Object.assign({\n            \"aria-label\": \"\",\n            onClick: handleClick\n          }, {\n            children: _jsx(TagFacesIcon, {\n              color: \"action\"\n            })\n          }))\n        }))\n      }\n    }), _jsx(\"div\", {\n      children: _jsx(Fab, Object.assign({\n        size: isSmall ? \"small\" : \"medium\",\n        color: \"primary\",\n        \"aria-label\": \"send message\",\n        className: classes.sendIcon,\n        onClick: handleSubmit\n      }, {\n        children: _jsx(SendOutlinedIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })]\n  }));\n};\n\nexport default ChatTextInput;","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/node_modules/@arpitbhalla/trio-calls/components/Chat/ChatTextInput.js"],"names":["jsx","_jsx","jsxs","_jsxs","React","makeStyles","Box","TextField","SendOutlinedIcon","Fab","Picker","TagFacesIcon","InputAdornment","IconButton","Popper","useStyles","theme","rootBox","display","alignItems","bottom","sendIcon","marginLeft","spacing","paddingLeft","ChatTextInput","onSend","isSmall","classes","text","setText","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleSubmit","Object","assign","className","children","open","Boolean","onEmojiClick","_event","emoji","fullWidth","multiline","rowsMax","placeholder","variant","value","margin","onChange","e","target","InputProps","startAdornment","style","padding","position","onClick","color","size","fontSize"],"mappings":"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","sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Picker from \"emoji-picker-react\";\nimport TagFacesIcon from \"@material-ui/icons/TagFaces\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popper from \"@material-ui/core/Popper\";\nconst useStyles = makeStyles((theme) => ({\n    rootBox: {\n        display: \"flex\",\n        alignItems: \"center\",\n        bottom: 0,\n    },\n    sendIcon: {\n        marginLeft: theme.spacing(2),\n        paddingLeft: 4,\n    },\n}));\nconst ChatTextInput = ({ onSend, isSmall }) => {\n    const classes = useStyles();\n    const [text, setText] = React.useState(\"\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleClick = (event) => {\n        setAnchorEl(anchorEl ? null : event.currentTarget);\n    };\n    const handleSubmit = () => {\n        if (!text)\n            return;\n        onSend === null || onSend === void 0 ? void 0 : onSend(text);\n        setText(\"\");\n    };\n    return (_jsxs(Box, Object.assign({ className: classes.rootBox }, { children: [_jsx(Popper, Object.assign({ open: Boolean(anchorEl), anchorEl: anchorEl }, { children: _jsx(Picker, { onEmojiClick: (_event, { emoji }) => {\n                        setText(text + emoji);\n                    } }) })), _jsx(TextField, { fullWidth: true, multiline: true, rowsMax: 2, placeholder: \"Send a message to everyone\", variant: \"outlined\", value: text, margin: isSmall ? \"dense\" : \"none\", onChange: (e) => setText(e.target.value), InputProps: {\n                    startAdornment: !isSmall && (_jsx(InputAdornment, Object.assign({ style: { margin: 0, padding: 0 }, position: \"start\" }, { children: _jsx(IconButton, Object.assign({ \"aria-label\": \"\", onClick: handleClick }, { children: _jsx(TagFacesIcon, { color: \"action\" }) })) }))),\n                } }), _jsx(\"div\", { children: _jsx(Fab, Object.assign({ size: isSmall ? \"small\" : \"medium\", color: \"primary\", \"aria-label\": \"send message\", className: classes.sendIcon, onClick: handleSubmit }, { children: _jsx(SendOutlinedIcon, { fontSize: \"small\" }) })) })] })));\n};\nexport default ChatTextInput;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/Video.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"relative\",\n    height: \"30rem\",\n    width: \"60rem\",\n    backgroundColor: \"#a2a2a2\",\n    maxWidth: \"800px\",\n    maxHeight: \"900px\",\n    borderRadius: 8\n  },\n  video: {\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"cover\",\n    borderRadius: 8,\n    aspectRatio: \"16/9\"\n  },\n  caption: {\n    position: \"absolute\",\n    color: \"white\",\n    left: theme.spacing(2),\n    bottom: theme.spacing(2)\n  }\n}));\n\nconst Video = _ref => {\n  _s();\n\n  let {\n    stream,\n    displayName = \"You\",\n    ...props\n  } = _ref;\n  const classes = useStyles();\n  const videoController = React.useRef(null);\n  React.useEffect(() => {\n    if (videoController.current && stream) {\n      videoController.current.srcObject = stream;\n    }\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: classes.video,\n      ref: videoController,\n      autoPlay: true,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.caption,\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      children: displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Video, \"Wa3uKa8hQDCJ9YYl/Pcv7WbyNT0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Video;\nexport default _c2 = /*#__PURE__*/React.memo(Video);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/Video.tsx"],"names":["React","makeStyles","Box","Typography","useStyles","theme","root","position","height","width","backgroundColor","maxWidth","maxHeight","borderRadius","video","objectFit","aspectRatio","caption","color","left","spacing","bottom","Video","stream","displayName","props","classes","videoController","useRef","useEffect","current","srcObject","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,MAAM,EAAE,OAFJ;AAGJC,IAAAA,KAAK,EAAE,OAHH;AAIJC,IAAAA,eAAe,EAAE,SAJb;AAKJC,IAAAA,QAAQ,EAAE,OALN;AAMJC,IAAAA,SAAS,EAAE,OANP;AAOJC,IAAAA,YAAY,EAAE;AAPV,GADiC;AAUvCC,EAAAA,KAAK,EAAE;AACLN,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLM,IAAAA,SAAS,EAAE,OAHN;AAILF,IAAAA,YAAY,EAAE,CAJT;AAKLG,IAAAA,WAAW,EAAE;AALR,GAVgC;AAiBvCC,EAAAA,OAAO,EAAE;AACPV,IAAAA,QAAQ,EAAE,UADH;AAEPW,IAAAA,KAAK,EAAE,OAFA;AAGPC,IAAAA,IAAI,EAAEd,KAAK,CAACe,OAAN,CAAc,CAAd,CAHC;AAIPC,IAAAA,MAAM,EAAEhB,KAAK,CAACe,OAAN,CAAc,CAAd;AAJD;AAjB8B,CAAZ,CAAD,CAA5B;;AA8BA,MAAME,KAA2B,GAAG,QAI9B;AAAA;;AAAA,MAJ+B;AACnCC,IAAAA,MADmC;AAEnCC,IAAAA,WAAW,GAAG,KAFqB;AAGnC,OAAGC;AAHgC,GAI/B;AACJ,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAMuB,eAAe,GAAG3B,KAAK,CAAC4B,MAAN,CAA+B,IAA/B,CAAxB;AACA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpB,QAAIF,eAAe,CAACG,OAAhB,IAA2BP,MAA/B,EAAuC;AACrCI,MAAAA,eAAe,CAACG,OAAhB,CAAwBC,SAAxB,GAAoCR,MAApC;AACD;AACF,GAJD,EAIG,CAACA,MAAD,CAJH;AAMA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACpB,IAAxB;AAAA,4BACE;AACE,MAAA,SAAS,EAAEoB,OAAO,CAACZ,KADrB;AAEE,MAAA,GAAG,EAAEa,eAFP;AAGE,MAAA,QAAQ,MAHV;AAAA,SAIMF;AAJN;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEC,OAAO,CAACT,OADrB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,eAHR;AAAA,gBAKGO;AALH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA9BD;;GAAMF,K;UAKYlB,S;;;KALZkB,K;AA+BN,kCAAetB,KAAK,CAACgC,IAAN,CAAWV,KAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    height: \"30rem\",\n    width: \"60rem\",\n    backgroundColor: \"#a2a2a2\",\n    maxWidth: \"800px\",\n    maxHeight: \"900px\",\n    borderRadius: 8,\n  },\n  video: {\n    height: \"100%\",\n    width: \"100%\",\n    objectFit: \"cover\",\n    borderRadius: 8,\n    aspectRatio: \"16/9\",\n  },\n  caption: {\n    position: \"absolute\",\n    color: \"white\",\n    left: theme.spacing(2),\n    bottom: theme.spacing(2),\n  },\n}));\n\ntype VideoProps = React.VideoHTMLAttributes<HTMLVideoElement> & {\n  stream: MediaStream | undefined;\n  displayName?: string;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  stream,\n  displayName = \"You\",\n  ...props\n}) => {\n  const classes = useStyles();\n  const videoController = React.useRef<HTMLVideoElement>(null);\n  React.useEffect(() => {\n    if (videoController.current && stream) {\n      videoController.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  return (\n    <Box className={classes.root}>\n      <video\n        className={classes.video}\n        ref={videoController}\n        autoPlay\n        {...props}\n      />\n      <Typography\n        className={classes.caption}\n        variant=\"subtitle1\"\n        color=\"textSecondary\"\n      >\n        {displayName}\n      </Typography>\n    </Box>\n  );\n};\nexport default React.memo(Video);\n"]},"metadata":{},"sourceType":"module"}
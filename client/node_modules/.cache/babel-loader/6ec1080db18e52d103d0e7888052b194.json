{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/core/provider/ThemeProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\") || false;\n  const useDark = useAppSelector(state => state.themeReducer.useDark);\n  const theme = React.useMemo(() => createTheme({\n    palette: {\n      primary: {\n        main: prefersDarkMode || useDark ? deepPurple[400] : deepPurple[800]\n      },\n      secondary: {\n        main: \"#6264A7\"\n      },\n      type: useDark ? \"dark\" : \"light\"\n    },\n    overrides: {\n      MuiCssBaseline: {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        \"@global\": {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          \"@font-face\": [\"Ubuntu\"]\n        }\n      },\n      MuiButton: {\n        root: {\n          textTransform: \"none\"\n        }\n      }\n    },\n    typography: {\n      fontFamily: [\"Ubuntu\", \"'Segoe UI'\", \"Roboto\"].join(\",\")\n    }\n  }), [prefersDarkMode, useDark]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"xziJNIBDzCwJfEvVmF21VwsR0Ew=\", false, function () {\n  return [useMediaQuery, useAppSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/core/provider/ThemeProvider.tsx"],"names":["React","useMediaQuery","CssBaseline","ThemeProvider","createTheme","deepPurple","useAppSelector","App","children","prefersDarkMode","useDark","state","themeReducer","theme","useMemo","palette","primary","main","secondary","type","overrides","MuiCssBaseline","MuiButton","root","textTransform","typography","fontFamily","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,MAAMC,GAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACtC,QAAMC,eAAe,GACnBR,aAAa,CAAC,8BAAD,CAAb,IAAiD,KADnD;AAEA,QAAMS,OAAO,GAAGJ,cAAc,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,OAA/B,CAA9B;AACA,QAAMG,KAAK,GAAGb,KAAK,CAACc,OAAN,CACZ,MACEV,WAAW,CAAC;AACVW,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EACFR,eAAe,IAAIC,OAAnB,GAA6BL,UAAU,CAAC,GAAD,CAAvC,GAA+CA,UAAU,CAAC,GAAD;AAFpD,OADF;AAKPa,MAAAA,SAAS,EAAE;AACTD,QAAAA,IAAI,EAAE;AADG,OALJ;AAQPE,MAAAA,IAAI,EAAET,OAAO,GAAG,MAAH,GAAY;AARlB,KADC;AAWVU,IAAAA,SAAS,EAAE;AACTC,MAAAA,cAAc,EAAE;AACd;AACA;AACA,mBAAW;AACT;AACA;AACA,wBAAc,CAAC,QAAD;AAHL;AAHG,OADP;AAUTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE;AACJC,UAAAA,aAAa,EAAE;AADX;AADG;AAVF,KAXD;AA2BVC,IAAAA,UAAU,EAAE;AACVC,MAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,YAAX,EAAyB,QAAzB,EAAmCC,IAAnC,CAAwC,GAAxC;AADF;AA3BF,GAAD,CAFD,EAiCZ,CAAClB,eAAD,EAAkBC,OAAlB,CAjCY,CAAd;AAoCA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEG,KAAtB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9CD;;GAAMD,G;UAEFN,a,EACcK,c;;;KAHZC,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { deepPurple } from \"@material-ui/core/colors\";\nimport { useAppSelector } from \"core/hooks/redux\";\n\nconst App: React.FC = ({ children }) => {\n  const prefersDarkMode =\n    useMediaQuery(\"(prefers-color-scheme: dark)\") || false;\n  const useDark = useAppSelector((state) => state.themeReducer.useDark);\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: {\n            main:\n              prefersDarkMode || useDark ? deepPurple[400] : deepPurple[800],\n          },\n          secondary: {\n            main: \"#6264A7\",\n          },\n          type: useDark ? \"dark\" : \"light\",\n        },\n        overrides: {\n          MuiCssBaseline: {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            \"@global\": {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              \"@font-face\": [\"Ubuntu\"],\n            },\n          },\n          MuiButton: {\n            root: {\n              textTransform: \"none\",\n            },\n          },\n        },\n        typography: {\n          fontFamily: [\"Ubuntu\", \"'Segoe UI'\", \"Roboto\"].join(\",\"),\n        },\n      }),\n    [prefersDarkMode, useDark]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </ThemeProvider>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
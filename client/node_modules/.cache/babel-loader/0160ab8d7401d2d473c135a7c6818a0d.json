{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/chat/components/ChatMsgs.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport { ChatMessage, ChatTextInput } from \"@arpitbhalla/trio-calls/components/Chat\";\nimport { useMsgs } from \"core/hooks/useMsgs\";\nimport { useSocket } from \"core/hooks/useSocket\";\nimport { useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { ChatMsgSkeleton } from \"@arpitbhalla/trio-calls/components/Chat/ChatSkeleton\";\nimport { dateToTime } from \"@arpitbhalla/trio-calls/utils/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    height: \"70vh\",\n    position: \"relative\"\n  },\n  chatRoot: {\n    height: \"57vh\",\n    overflowY: \"auto\"\n  },\n  textBox: {\n    bottom: 0,\n    width: \"100%\"\n  }\n}));\n\nconst ChatMsgs = _ref => {\n  _s();\n\n  let {\n    handleTitle\n  } = _ref;\n  const classes = useStyles();\n  const {\n    meetID\n  } = useParams();\n  const {\n    sendMessage,\n    loading,\n    meetTitle\n  } = useMsgs(meetID);\n  const {\n    UID: userID\n  } = useAppSelector(state => state.authReducer);\n  const {\n    chat\n  } = useAppSelector(state => state.chatReducer);\n  const socketClient = useSocket();\n  React.useEffect(() => {\n    handleTitle === null || handleTitle === void 0 ? void 0 : handleTitle(meetTitle);\n  }, [meetTitle]);\n  React.useEffect(() => {\n    socketClient.emit(\"join-room\", {\n      meetID\n    });\n  }, []);\n  let prev = \"\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.chatRoot,\n      children: loading ? [...new Array(5)].map((e, i) => /*#__PURE__*/_jsxDEV(ChatMsgSkeleton, {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }, this)) : chat === null || chat === void 0 ? void 0 : chat.map((_ref2, i) => {\n        let {\n          message,\n          displayName,\n          createdAt,\n          UID\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(ChatMessage, {\n          hideAvatar: true,\n          hidePrimary: prev === (prev = UID),\n          displayName: displayName,\n          isSelf: UID === userID,\n          message: message,\n          time: dateToTime(createdAt)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.textBox,\n      children: /*#__PURE__*/_jsxDEV(ChatTextInput, {\n        onSend: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatMsgs, \"Xan2tq2PdLJiY7Hhd/Glp2lZaT8=\", false, function () {\n  return [useStyles, useParams, useMsgs, useAppSelector, useAppSelector, useSocket];\n});\n\n_c = ChatMsgs;\nexport default ChatMsgs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMsgs\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/chat/components/ChatMsgs.tsx"],"names":["React","makeStyles","Box","ChatMessage","ChatTextInput","useMsgs","useSocket","useParams","useAppSelector","ChatMsgSkeleton","dateToTime","useStyles","theme","root","padding","spacing","height","position","chatRoot","overflowY","textBox","bottom","width","ChatMsgs","handleTitle","classes","meetID","sendMessage","loading","meetTitle","UID","userID","state","authReducer","chat","chatReducer","socketClient","useEffect","emit","prev","Array","map","e","i","message","displayName","createdAt"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  ChatMessage,\n  ChatTextInput,\n} from \"@arpitbhalla/trio-calls/components/Chat\";\nimport { useMsgs } from \"core/hooks/useMsgs\";\nimport { useSocket } from \"core/hooks/useSocket\";\nimport { useParams } from \"react-router-dom\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { ChatMsgSkeleton } from \"@arpitbhalla/trio-calls/components/Chat/ChatSkeleton\";\nimport { dateToTime } from \"@arpitbhalla/trio-calls/utils/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    height: \"70vh\",\n    position: \"relative\",\n  },\n  chatRoot: {\n    height: \"57vh\",\n    overflowY: \"auto\",\n  },\n  textBox: {\n    bottom: 0,\n    width: \"100%\",\n  },\n}));\n\ntype ChatMsgsProps = {\n  handleTitle?: (title: string) => unknown;\n};\n\nconst ChatMsgs: React.FC<ChatMsgsProps> = ({ handleTitle }) => {\n  const classes = useStyles();\n  const { meetID } = useParams<{ meetID: string }>();\n  const { sendMessage, loading, meetTitle } = useMsgs(meetID);\n  const { UID: userID } = useAppSelector((state) => state.authReducer);\n  const { chat } = useAppSelector((state) => state.chatReducer);\n  const socketClient = useSocket();\n\n  React.useEffect(() => {\n    handleTitle?.(meetTitle);\n  }, [meetTitle]);\n\n  React.useEffect(() => {\n    socketClient.emit(\"join-room\", {\n      meetID,\n    });\n  }, []);\n\n  let prev = \"\";\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.chatRoot}>\n        {loading\n          ? [...new Array(5)].map((e, i) => <ChatMsgSkeleton key={i} />)\n          : chat?.map(({ message, displayName, createdAt, UID }, i) => (\n              <ChatMessage\n                key={i}\n                hideAvatar\n                hidePrimary={prev === (prev = UID)}\n                displayName={displayName}\n                isSelf={UID === userID}\n                message={message}\n                time={dateToTime(createdAt)}\n              />\n            ))}\n      </Box>\n      <Box className={classes.textBox}>\n        <ChatTextInput onSend={sendMessage} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatMsgs;\n"]},"metadata":{},"sourceType":"module"}
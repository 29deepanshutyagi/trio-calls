{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/core/provider/AudioProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport NotificationTune from \"assets/notification.mp3\";\nimport ReactHowler from \"react-howler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AudioContext = /*#__PURE__*/React.createContext({\n  playAudio: () => undefined\n});\nexport const AudioProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const audioPlayer = React.useRef(null);\n\n  const playAudio = () => {\n    var _audioPlayer$current;\n\n    (_audioPlayer$current = audioPlayer.current) === null || _audioPlayer$current === void 0 ? void 0 : _audioPlayer$current.howler.play();\n    return undefined;\n  };\n\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: {\n      playAudio\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(ReactHowler, {\n      ref: audioPlayer,\n      src: NotificationTune,\n      preload: true,\n      playing: false,\n      loop: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AudioProvider, \"/y/xr4xV2YDqPbNjYAFHyLMJkug=\");\n\n_c = AudioProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioProvider\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/core/provider/AudioProvider.tsx"],"names":["React","NotificationTune","ReactHowler","AudioContext","createContext","playAudio","undefined","AudioProvider","children","audioPlayer","useRef","current","howler","play"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AAAEC,EAAAA,SAAS,EAAE,MAAMC;AAAnB,CAApB,CAArB;AAEP,OAAO,MAAMC,aAAuB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACvD,QAAMC,WAAW,GAAGT,KAAK,CAACU,MAAN,CAA0B,IAA1B,CAApB;;AAEA,QAAML,SAAS,GAAG,MAAM;AAAA;;AACtB,4BAAAI,WAAW,CAACE,OAAZ,8EAAqBC,MAArB,CAA4BC,IAA5B;AACA,WAAOP,SAAP;AACD,GAHD;;AAKA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAED,MAAAA;AAAF,KAA9B;AAAA,eACGG,QADH,eAEE,QAAC,WAAD;AACE,MAAA,GAAG,EAAEC,WADP;AAEE,MAAA,GAAG,EAAER,gBAFP;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,OAAO,EAAE,KAJX;AAKE,MAAA,IAAI,EAAE;AALR;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApBM;;GAAMM,a;;KAAAA,a","sourcesContent":["import React from \"react\";\nimport NotificationTune from \"assets/notification.mp3\";\nimport ReactHowler from \"react-howler\";\n\nexport const AudioContext = React.createContext({ playAudio: () => undefined });\n\nexport const AudioProvider: React.FC = ({ children }) => {\n  const audioPlayer = React.useRef<ReactHowler>(null);\n\n  const playAudio = () => {\n    audioPlayer.current?.howler.play();\n    return undefined;\n  };\n\n  return (\n    <AudioContext.Provider value={{ playAudio }}>\n      {children}\n      <ReactHowler\n        ref={audioPlayer}\n        src={NotificationTune}\n        preload\n        playing={false}\n        loop={false}\n      />\n    </AudioContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
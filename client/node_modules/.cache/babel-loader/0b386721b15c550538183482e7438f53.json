{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Peer from \"peerjs\";\nimport { useTitle } from \"core/hooks/common\";\nimport { useSnackbar } from \"notistack\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { iceServers } from \"core/config\";\nimport { useSocket } from \"core/hooks/useSocket\";\nimport { useAudio } from \"core/hooks/useAudio\";\nimport { useUpdate } from \"core/hooks/useUpdate\";\nimport { useDocVisible } from \"core/hooks/useDocVisible\";\nimport { removeParticipant, updateParticipant, updatePoll } from \"core/reducers/meeting\";\nimport { toggleHand } from \"core/reducers/media\";\nconst logger = process.env.NODE_ENV === \"development\" ? console.log : () => {\n  return;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nexport const useVideoConf = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const socketClient = useSocket();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    playAudio\n  } = useAudio();\n  const changeTab = useDocVisible();\n  const peers = React.useRef();\n  const myStream = React.useRef();\n  const peerStream = React.useRef();\n  const peerJs = React.useRef();\n  const {\n    mediaReducer,\n    meetReducer,\n    authReducer\n  } = useAppSelector(s => s);\n  const update = useUpdate();\n  useTitle(meetReducer.meetDetails.title);\n  logger(mediaReducer); // Start/Stop Audio\n\n  React.useEffect(() => {\n    if (myStream.current) {\n      myStream.current.getAudioTracks()[0].enabled = mediaReducer.isAudio;\n    }\n  }, [mediaReducer.isAudio]); // Start/Stop Video\n\n  React.useEffect(() => {\n    if (myStream.current) {\n      myStream.current.getVideoTracks()[0].enabled = mediaReducer.isVideo;\n    }\n  }, [mediaReducer.isVideo]); // Initialize Socket & PeerJS\n\n  React.useEffect(() => {\n    peers.current = {};\n    peerStream.current = new Map();\n    peerJs.current = new Peer({\n      path: \"/\",\n      host: \"0.peerjs.com\",\n      port: 443,\n      config: {\n        iceServers\n      }\n    });\n    socketEvents();\n    initializePeersEvents();\n  }, []); // Emit when user changes tab\n\n  React.useEffect(() => {\n    socketClient.emit(\"changeTab\", {\n      displayName: authReducer.displayName,\n      UID: authReducer.UID\n    });\n  }, [changeTab]); // Socket.io Listeners\n\n  const socketEvents = () => {\n    socketClient.on(\"connect\", () => {\n      logger(\"socket connected\");\n    });\n    socketClient.on(\"user-disconnected\", userID => {\n      var _peers$current, _peers$current$userID;\n\n      logger(\"user disconnected-- closing peers\", userID);\n      (_peers$current = peers.current) === null || _peers$current === void 0 ? void 0 : (_peers$current$userID = _peers$current[userID]) === null || _peers$current$userID === void 0 ? void 0 : _peers$current$userID.close();\n    });\n    socketClient.on(\"onRaiseHand\", _ref => {\n      let {\n        displayName,\n        UID\n      } = _ref;\n      logger(\"user raised hand\", displayName);\n\n      if (UID != authReducer.UID) {\n        logger(UID, authReducer.UID);\n        playAudio === null || playAudio === void 0 ? void 0 : playAudio();\n        enqueueSnackbar(displayName + \" raised hand\");\n      }\n    });\n    socketClient.once(\"lockMeeting\", () => {\n      enqueueSnackbar(\"Meeting Locked by Host\", {\n        variant: \"warning\"\n      });\n    });\n    socketClient.once(\"changeTab\", _ref2 => {\n      let {\n        displayName,\n        UID\n      } = _ref2;\n\n      if (UID !== authReducer.UID) {\n        logger(\"changes tab\", displayName);\n        enqueueSnackbar(displayName + \" changing tabs\");\n      }\n    });\n    socketClient.on(\"onNewPoll\", pollData => {\n      dispatch(updatePoll(pollData));\n    });\n    socketClient.on(\"forceQuit\", UID => {\n      var _peerJs$current;\n\n      logger(\"forceQuit\", UID, authReducer.UID);\n\n      if (UID === ((_peerJs$current = peerJs.current) === null || _peerJs$current === void 0 ? void 0 : _peerJs$current.id)) {\n        enqueueSnackbar(\"You were removed by host\", {\n          variant: \"info\"\n        });\n        destroyConnection();\n      }\n    });\n    socketClient.on(\"disconnect\", () => {\n      logger(\"socket disconnected --\");\n    });\n    socketClient.on(\"error\", err => {\n      logger(\"socket error --\", err);\n    });\n  }; // Initialize PeerJS Events\n\n\n  const initializePeersEvents = () => {\n    var _peerJs$current2, _peerJs$current3;\n\n    (_peerJs$current2 = peerJs.current) === null || _peerJs$current2 === void 0 ? void 0 : _peerJs$current2.on(\"open\", id => {\n      const userData = {\n        userID: id,\n        meetID: meetReducer.meetDetails.meetID,\n        displayName: authReducer.displayName\n      };\n      logger(\"peers established and joined room\", userData);\n      socketClient.emit(\"join-room\", userData);\n      setNavigatorToStream();\n    });\n    (_peerJs$current3 = peerJs.current) === null || _peerJs$current3 === void 0 ? void 0 : _peerJs$current3.on(\"error\", err => {\n      logger(\"peer connection error\", err); // peerJs.current?.reconnect();\n    });\n  };\n\n  const setNavigatorToStream = () => {\n    getVideoAudioStream().then(stream => {\n      if (stream) {\n        myStream.current = stream;\n        myStream.current.getAudioTracks()[0].enabled = mediaReducer.isAudio;\n        myStream.current.getVideoTracks()[0].enabled = mediaReducer.isVideo;\n        setPeersListeners(stream);\n        newUserConnection(stream);\n        update();\n      }\n    });\n  }; // Get Video & Audio from navigator\n\n\n  const getVideoAudioStream = () => {\n    const myNavigator = navigator.mediaDevices.getUserMedia;\n    return myNavigator({\n      video: {\n        frameRate: 12,\n        noiseSuppression: true,\n        width: {\n          min: 640,\n          ideal: 1280,\n          max: 1920\n        },\n        height: {\n          min: 480,\n          ideal: 720,\n          max: 1080\n        }\n      },\n      audio: true\n    });\n  }; // Listens for call\n\n\n  const setPeersListeners = stream => {\n    var _peerJs$current4;\n\n    (_peerJs$current4 = peerJs.current) === null || _peerJs$current4 === void 0 ? void 0 : _peerJs$current4.on(\"call\", call => {\n      call.answer(stream);\n      call.on(\"stream\", userVideoStream => {\n        var _peerStream$current;\n\n        logger(\"user stream data\", userVideoStream);\n        playAudio === null || playAudio === void 0 ? void 0 : playAudio();\n        (_peerStream$current = peerStream.current) === null || _peerStream$current === void 0 ? void 0 : _peerStream$current.set(call.metadata.id, {\n          stream: userVideoStream,\n          displayName: call.metadata.displayName\n        });\n        dispatch(updateParticipant({\n          UID: call.metadata.id,\n          displayName: call.metadata.displayName\n        }));\n        update();\n      });\n      call.on(\"close\", () => {\n        var _peerStream$current2;\n\n        logger(\"closing peers listeners\", call.metadata.id);\n        enqueueSnackbar(call.metadata.displayName + \" left\", {\n          variant: \"info\"\n        });\n        dispatch(removeParticipant({\n          UID: call.metadata.id\n        }));\n        update();\n        (_peerStream$current2 = peerStream.current) === null || _peerStream$current2 === void 0 ? void 0 : _peerStream$current2.delete(call.metadata.id);\n      });\n      call.on(\"error\", () => {\n        var _peerStream$current3;\n\n        logger(\"peer error ------\");\n        (_peerStream$current3 = peerStream.current) === null || _peerStream$current3 === void 0 ? void 0 : _peerStream$current3.delete(call.metadata.id);\n      });\n      peers.current && (peers.current[call.metadata.id] = call);\n    });\n  }; // Handler for new user connect\n\n\n  const newUserConnection = stream => {\n    socketClient.on(\"user-connected\", userData => {\n      logger(\"New User Connected\", userData);\n      connectToNewUser(userData, stream);\n      enqueueSnackbar(userData.displayName + \" joined\", {\n        variant: \"info\"\n      });\n      dispatch(updateParticipant({\n        UID: userData.userID,\n        displayName: userData.displayName\n      }));\n      update();\n    });\n  }; // Call user\n\n\n  const connectToNewUser = (userData, stream) => {\n    var _peerJs$current5, _peerJs$current6;\n\n    const {\n      userID,\n      displayName\n    } = userData;\n    const call = (_peerJs$current5 = peerJs.current) === null || _peerJs$current5 === void 0 ? void 0 : _peerJs$current5.call(userID, stream, {\n      metadata: {\n        id: (_peerJs$current6 = peerJs.current) === null || _peerJs$current6 === void 0 ? void 0 : _peerJs$current6.id,\n        displayName: authReducer.displayName\n      }\n    });\n    call === null || call === void 0 ? void 0 : call.on(\"stream\", userVideoStream => {\n      var _peerStream$current4;\n\n      (_peerStream$current4 = peerStream.current) === null || _peerStream$current4 === void 0 ? void 0 : _peerStream$current4.set(userID, {\n        stream: userVideoStream,\n        displayName\n      });\n      update();\n    });\n    call === null || call === void 0 ? void 0 : call.on(\"close\", () => {\n      var _peerStream$current5;\n\n      logger(\"closing new user\", userID);\n      (_peerStream$current5 = peerStream.current) === null || _peerStream$current5 === void 0 ? void 0 : _peerStream$current5.delete(userID);\n      dispatch(removeParticipant({\n        UID: userID\n      }));\n      update();\n    });\n    call === null || call === void 0 ? void 0 : call.on(\"error\", () => {\n      logger(\"peer error ------\");\n      logger(\"closing new user\", userID);\n    });\n    peers.current && call && (peers.current[userID] = call);\n  }; // raise hand handler\n\n\n  const raiseHand = () => {\n    dispatch(toggleHand(null));\n    socketClient.emit(\"raiseHand\", {\n      displayName: authReducer.displayName,\n      UID: authReducer.UID\n    });\n  }; // end call handler\n\n\n  const destroyConnection = () => {\n    var _myStream$current, _peerJs$current7;\n\n    const myMediaTracks = (_myStream$current = myStream.current) === null || _myStream$current === void 0 ? void 0 : _myStream$current.getTracks();\n    myMediaTracks === null || myMediaTracks === void 0 ? void 0 : myMediaTracks.forEach(track => {\n      track.stop();\n    });\n    (_peerJs$current7 = peerJs.current) === null || _peerJs$current7 === void 0 ? void 0 : _peerJs$current7.destroy();\n    socketClient.disconnect();\n    window.location.href = \"/\";\n  };\n\n  return {\n    myStream,\n    peerStream,\n    destroyConnection,\n    raiseHand\n  };\n};\n\n_s(useVideoConf, \"DsBg1ExNGpoj2gdUH2BJmYOQMF0=\", false, function () {\n  return [useAppDispatch, useSocket, useSnackbar, useAudio, useDocVisible, useAppSelector, useUpdate, useTitle];\n});","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/hooks/useVideoConf.ts"],"names":["React","Peer","useTitle","useSnackbar","useAppDispatch","useAppSelector","iceServers","useSocket","useAudio","useUpdate","useDocVisible","removeParticipant","updateParticipant","updatePoll","toggleHand","logger","process","env","NODE_ENV","console","log","useVideoConf","dispatch","socketClient","enqueueSnackbar","playAudio","changeTab","peers","useRef","myStream","peerStream","peerJs","mediaReducer","meetReducer","authReducer","s","update","meetDetails","title","useEffect","current","getAudioTracks","enabled","isAudio","getVideoTracks","isVideo","Map","path","host","port","config","socketEvents","initializePeersEvents","emit","displayName","UID","on","userID","close","once","variant","pollData","id","destroyConnection","err","userData","meetID","setNavigatorToStream","getVideoAudioStream","then","stream","setPeersListeners","newUserConnection","myNavigator","navigator","mediaDevices","getUserMedia","video","frameRate","noiseSuppression","width","min","ideal","max","height","audio","call","answer","userVideoStream","set","metadata","delete","connectToNewUser","raiseHand","myMediaTracks","getTracks","forEach","track","stop","destroy","disconnect","window","location","href"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Peer from \"peerjs\";\nimport { useTitle } from \"core/hooks/common\";\nimport { useSnackbar } from \"notistack\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { iceServers } from \"core/config\";\nimport { useSocket } from \"core/hooks/useSocket\";\nimport { useAudio } from \"core/hooks/useAudio\";\nimport { useUpdate } from \"core/hooks/useUpdate\";\nimport { useDocVisible } from \"core/hooks/useDocVisible\";\nimport {\n  removeParticipant,\n  updateParticipant,\n  updatePoll,\n} from \"core/reducers/meeting\";\nimport { toggleHand } from \"core/reducers/media\";\n\nconst logger =\n  process.env.NODE_ENV === \"development\"\n    ? console.log\n    : () => {\n        return;\n      };\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useVideoConf = () => {\n  const dispatch = useAppDispatch();\n  const socketClient = useSocket();\n  const { enqueueSnackbar } = useSnackbar();\n  const { playAudio } = useAudio();\n  const changeTab = useDocVisible();\n  const peers = React.useRef<Record<string, Peer.MediaConnection>>();\n  const myStream = React.useRef<MediaStream>();\n  const peerStream =\n    React.useRef<Map<string, { displayName: string; stream: MediaStream }>>();\n  const peerJs = React.useRef<Peer>();\n  const { mediaReducer, meetReducer, authReducer } = useAppSelector((s) => s);\n  const update = useUpdate();\n  useTitle(meetReducer.meetDetails.title);\n\n  logger(mediaReducer);\n\n  // Start/Stop Audio\n  React.useEffect(() => {\n    if (myStream.current) {\n      myStream.current.getAudioTracks()[0].enabled = mediaReducer.isAudio;\n    }\n  }, [mediaReducer.isAudio]);\n\n  // Start/Stop Video\n  React.useEffect(() => {\n    if (myStream.current) {\n      myStream.current.getVideoTracks()[0].enabled = mediaReducer.isVideo;\n    }\n  }, [mediaReducer.isVideo]);\n\n  // Initialize Socket & PeerJS\n  React.useEffect(() => {\n    peers.current = {};\n    peerStream.current = new Map();\n    peerJs.current = new Peer({\n      path: \"/\",\n      host: \"0.peerjs.com\",\n      port: 443,\n      config: { iceServers },\n    });\n    socketEvents();\n    initializePeersEvents();\n  }, []);\n\n  // Emit when user changes tab\n  React.useEffect(() => {\n    socketClient.emit(\"changeTab\", {\n      displayName: authReducer.displayName,\n      UID: authReducer.UID,\n    });\n  }, [changeTab]);\n\n  // Socket.io Listeners\n  const socketEvents = () => {\n    socketClient.on(\"connect\", () => {\n      logger(\"socket connected\");\n    });\n    socketClient.on(\"user-disconnected\", (userID) => {\n      logger(\"user disconnected-- closing peers\", userID);\n      peers.current?.[userID]?.close();\n    });\n    socketClient.on(\"onRaiseHand\", ({ displayName, UID }) => {\n      logger(\"user raised hand\", displayName);\n      if (UID != authReducer.UID) {\n        logger(UID, authReducer.UID);\n        playAudio?.();\n        enqueueSnackbar(displayName + \" raised hand\");\n      }\n    });\n    socketClient.once(\"lockMeeting\", () => {\n      enqueueSnackbar(\"Meeting Locked by Host\", { variant: \"warning\" });\n    });\n    socketClient.once(\"changeTab\", ({ displayName, UID }) => {\n      if (UID !== authReducer.UID) {\n        logger(\"changes tab\", displayName);\n        enqueueSnackbar(displayName + \" changing tabs\");\n      }\n    });\n    socketClient.on(\"onNewPoll\", (pollData) => {\n      dispatch(updatePoll(pollData));\n    });\n    socketClient.on(\"forceQuit\", (UID) => {\n      logger(\"forceQuit\", UID, authReducer.UID);\n      if (UID === peerJs.current?.id) {\n        enqueueSnackbar(\"You were removed by host\", { variant: \"info\" });\n        destroyConnection();\n      }\n    });\n    socketClient.on(\"disconnect\", () => {\n      logger(\"socket disconnected --\");\n    });\n    socketClient.on(\"error\", (err) => {\n      logger(\"socket error --\", err);\n    });\n  };\n\n  // Initialize PeerJS Events\n  const initializePeersEvents = () => {\n    peerJs.current?.on(\"open\", (id) => {\n      const userData = {\n        userID: id,\n        meetID: meetReducer.meetDetails.meetID,\n        displayName: authReducer.displayName,\n      };\n      logger(\"peers established and joined room\", userData);\n      socketClient.emit(\"join-room\", userData);\n      setNavigatorToStream();\n    });\n    peerJs.current?.on(\"error\", (err) => {\n      logger(\"peer connection error\", err);\n      // peerJs.current?.reconnect();\n    });\n  };\n  const setNavigatorToStream = () => {\n    getVideoAudioStream().then((stream) => {\n      if (stream) {\n        myStream.current = stream;\n        myStream.current.getAudioTracks()[0].enabled = mediaReducer.isAudio;\n        myStream.current.getVideoTracks()[0].enabled = mediaReducer.isVideo;\n        setPeersListeners(stream);\n        newUserConnection(stream);\n        update();\n      }\n    });\n  };\n\n  // Get Video & Audio from navigator\n  const getVideoAudioStream = () => {\n    const myNavigator = navigator.mediaDevices.getUserMedia;\n    return myNavigator({\n      video: {\n        frameRate: 12,\n        noiseSuppression: true,\n        width: { min: 640, ideal: 1280, max: 1920 },\n        height: { min: 480, ideal: 720, max: 1080 },\n      },\n      audio: true,\n    });\n  };\n  // Listens for call\n  const setPeersListeners = (stream: MediaStream) => {\n    peerJs.current?.on(\"call\", (call) => {\n      call.answer(stream);\n      call.on(\"stream\", (userVideoStream) => {\n        logger(\"user stream data\", userVideoStream);\n        playAudio?.();\n        peerStream.current?.set(call.metadata.id, {\n          stream: userVideoStream,\n          displayName: call.metadata.displayName,\n        });\n        dispatch(\n          updateParticipant({\n            UID: call.metadata.id,\n            displayName: call.metadata.displayName,\n          })\n        );\n        update();\n      });\n      call.on(\"close\", () => {\n        logger(\"closing peers listeners\", call.metadata.id);\n        enqueueSnackbar(call.metadata.displayName + \" left\", {\n          variant: \"info\",\n        });\n        dispatch(\n          removeParticipant({\n            UID: call.metadata.id,\n          })\n        );\n        update();\n\n        peerStream.current?.delete(call.metadata.id);\n      });\n      call.on(\"error\", () => {\n        logger(\"peer error ------\");\n        peerStream.current?.delete(call.metadata.id);\n      });\n      peers.current && (peers.current[call.metadata.id] = call);\n    });\n  };\n\n  // Handler for new user connect\n  const newUserConnection = (stream: MediaStream) => {\n    socketClient.on(\"user-connected\", (userData) => {\n      logger(\"New User Connected\", userData);\n      connectToNewUser(userData, stream);\n      enqueueSnackbar(userData.displayName + \" joined\", {\n        variant: \"info\",\n      });\n      dispatch(\n        updateParticipant({\n          UID: userData.userID,\n          displayName: userData.displayName,\n        })\n      );\n      update();\n    });\n  };\n  // Call user\n  const connectToNewUser = (\n    userData: { userID: string; displayName: string },\n    stream: MediaStream\n  ) => {\n    const { userID, displayName } = userData;\n\n    const call = peerJs.current?.call(userID, stream, {\n      metadata: {\n        id: peerJs.current?.id,\n        displayName: authReducer.displayName,\n      },\n    });\n\n    call?.on(\"stream\", (userVideoStream) => {\n      peerStream.current?.set(userID, {\n        stream: userVideoStream,\n        displayName,\n      });\n      update();\n    });\n    call?.on(\"close\", () => {\n      logger(\"closing new user\", userID);\n      peerStream.current?.delete(userID);\n      dispatch(\n        removeParticipant({\n          UID: userID,\n        })\n      );\n      update();\n    });\n    call?.on(\"error\", () => {\n      logger(\"peer error ------\");\n      logger(\"closing new user\", userID);\n    });\n    peers.current && call && (peers.current[userID] = call);\n  };\n\n  // raise hand handler\n  const raiseHand = () => {\n    dispatch(toggleHand(null));\n    socketClient.emit(\"raiseHand\", {\n      displayName: authReducer.displayName,\n      UID: authReducer.UID,\n    });\n  };\n\n  // end call handler\n  const destroyConnection = () => {\n    const myMediaTracks = myStream.current?.getTracks();\n    myMediaTracks?.forEach((track) => {\n      track.stop();\n    });\n    peerJs.current?.destroy();\n    socketClient.disconnect();\n    window.location.href = \"/\";\n  };\n\n  return {\n    myStream,\n    peerStream,\n    destroyConnection,\n    raiseHand,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
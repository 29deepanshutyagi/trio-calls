{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/SidePanel/Poll/Form.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { AfterPoll } from \"./AfterPoll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PollForm = _ref => {\n  _s();\n\n  let {\n    question,\n    options,\n    correct\n  } = _ref;\n  const [response, setResponse] = React.useState(\"\");\n  const [submit, setSubmit] = React.useState(false);\n\n  if (submit) {\n    return /*#__PURE__*/_jsxDEV(AfterPoll, {\n      question,\n      options,\n      correct,\n      myRes: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textPrimary\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"options\",\n        value: response,\n        onChange: (event, val) => setResponse(val),\n        children: options.map(opt => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: opt,\n          label: opt,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }, this)\n        }, opt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setSubmit(true),\n        size: \"small\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PollForm, \"G3CJLKbVnbl165Vx6OkKj9x9Av8=\");\n\n_c = PollForm;\nexport default PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/SidePanel/Poll/Form.tsx"],"names":["React","Typography","FormControl","RadioGroup","FormControlLabel","Radio","Button","Box","AfterPoll","PollForm","question","options","correct","response","setResponse","useState","submit","setSubmit","myRes","event","val","map","opt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,QAA4B,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAmC;AACvE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACe,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,KAAK,CAACe,QAAN,CAAe,KAAf,CAA5B;;AAEA,MAAIC,MAAJ,EAAY;AACV,wBAAO,QAAC,SAAD;AAAiBN,MAAAA,QAAjB;AAA2BC,MAAAA,OAA3B;AAAoCC,MAAAA,OAApC;AAA6CM,MAAAA,KAAK,EAAEL;AAApD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAC,aAAtC;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAkC,MAAA,SAAS,MAA3C;AAAA,6BACE,QAAC,UAAD;AACE,sBAAW,SADb;AAEE,QAAA,KAAK,EAAEG,QAFT;AAGE,QAAA,QAAQ,EAAE,CAACM,KAAD,EAAQC,GAAR,KAAgBN,WAAW,CAACM,GAAD,CAHvC;AAAA,kBAKGT,OAAO,CAACU,GAAR,CAAaC,GAAD,iBACX,QAAC,gBAAD;AAEE,UAAA,KAAK,EAAEA,GAFT;AAGE,UAAA,KAAK,EAAEA,GAHT;AAIE,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAJX,WACOA,GADP;AAAA;AAAA;AAAA;AAAA,gBADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAoBE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,cAAc,EAAC,UAAnC;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAML,SAAS,CAAC,IAAD,CAD1B;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAxCD;;GAAMR,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport { PollType } from \"./PollType\";\nimport { AfterPoll } from \"./AfterPoll\";\n\nconst PollForm: React.FC<PollType> = ({ question, options, correct }) => {\n  const [response, setResponse] = React.useState(\"\");\n  const [submit, setSubmit] = React.useState(false);\n\n  if (submit) {\n    return <AfterPoll {...{ question, options, correct, myRes: response }} />;\n  }\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\" color=\"textPrimary\">\n        {question}\n      </Typography>\n      <FormControl component=\"fieldset\" fullWidth>\n        <RadioGroup\n          aria-label=\"options\"\n          value={response}\n          onChange={(event, val) => setResponse(val)}\n        >\n          {options.map((opt) => (\n            <FormControlLabel\n              key={opt}\n              value={opt}\n              label={opt}\n              control={<Radio />}\n            />\n          ))}\n        </RadioGroup>\n      </FormControl>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          onClick={() => setSubmit(true)}\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Vote\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PollForm;\n"]},"metadata":{},"sourceType":"module"}
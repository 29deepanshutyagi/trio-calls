{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/meet/waitRoom/Preview.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { toggleAudio, toggleVideo } from \"core/reducers/media\";\nimport ControlButton from \"@arpitbhalla/trio-calls/components/ControllerButton\";\nimport { MicOutlined, MicOffOutlined, VideocamOffOutlined, VideocamOutlined } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ShadowBox from \"@arpitbhalla/trio-calls/components/ShadowBox\";\nimport { useStyles } from \"./Preview.useStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = () => {\n  _s();\n\n  const classes = useStyles();\n  const videoController = React.useRef(null);\n  const dispatch = useAppDispatch();\n  const {\n    isAudio,\n    isVideo\n  } = useAppSelector(_ref => {\n    let {\n      mediaReducer\n    } = _ref;\n    return mediaReducer;\n  });\n  React.useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: isVideo,\n      audio: true\n    }).then(stream => {\n      if (videoController.current) {\n        videoController.current.srcObject = stream;\n      }\n    });\n  }, [isVideo]);\n  React.useEffect(() => {\n    if (videoController.current) {\n      videoController.current.muted = !isAudio;\n    }\n  }, [isAudio]);\n  return /*#__PURE__*/_jsxDEV(ShadowBox, {\n    className: classes.root,\n    children: [isVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n      muted: true,\n      className: classes.video,\n      ref: videoController,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.text,\n      variant: \"h5\",\n      color: \"textSecondary\",\n      children: \"Camera is off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.controller,\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        title: \"Microphone\",\n        isEnabled: isAudio,\n        IconOn: MicOutlined,\n        IconOff: MicOffOutlined,\n        onClick: () => dispatch(toggleAudio(null))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        title: \"Video\",\n        isEnabled: isVideo,\n        IconOn: VideocamOutlined,\n        IconOff: VideocamOffOutlined,\n        onClick: () => dispatch(toggleVideo(null))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preview, \"nt7NqHpopMQkZBp7epyHJSNGKx0=\", false, function () {\n  return [useStyles, useAppDispatch, useAppSelector];\n});\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/waitRoom/Preview.tsx"],"names":["React","useAppDispatch","useAppSelector","toggleAudio","toggleVideo","ControlButton","MicOutlined","MicOffOutlined","VideocamOffOutlined","VideocamOutlined","Typography","Box","ShadowBox","useStyles","Preview","classes","videoController","useRef","dispatch","isAudio","isVideo","mediaReducer","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","muted","root","text","controller"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { toggleAudio, toggleVideo } from \"core/reducers/media\";\nimport ControlButton from \"@arpitbhalla/trio-calls/components/ControllerButton\";\nimport {\n  MicOutlined,\n  MicOffOutlined,\n  VideocamOffOutlined,\n  VideocamOutlined,\n} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ShadowBox from \"@arpitbhalla/trio-calls/components/ShadowBox\";\nimport { useStyles } from \"./Preview.useStyles\";\n\nconst Preview: React.FC = () => {\n  const classes = useStyles();\n  const videoController = React.useRef<HTMLVideoElement>(null);\n  const dispatch = useAppDispatch();\n  const { isAudio, isVideo } = useAppSelector(\n    ({ mediaReducer }) => mediaReducer\n  );\n  React.useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: isVideo, audio: true })\n      .then((stream) => {\n        if (videoController.current) {\n          videoController.current.srcObject = stream;\n        }\n      });\n  }, [isVideo]);\n\n  React.useEffect(() => {\n    if (videoController.current) {\n      videoController.current.muted = !isAudio;\n    }\n  }, [isAudio]);\n\n  return (\n    <ShadowBox className={classes.root}>\n      {isVideo ? (\n        <video muted className={classes.video} ref={videoController} autoPlay />\n      ) : (\n        <Typography className={classes.text} variant=\"h5\" color=\"textSecondary\">\n          Camera is off\n        </Typography>\n      )}\n      <Box className={classes.controller}>\n        <ControlButton\n          title=\"Microphone\"\n          isEnabled={isAudio}\n          IconOn={MicOutlined}\n          IconOff={MicOffOutlined}\n          onClick={() => dispatch(toggleAudio(null))}\n        />\n        <ControlButton\n          title=\"Video\"\n          isEnabled={isVideo}\n          IconOn={VideocamOutlined}\n          IconOff={VideocamOffOutlined}\n          onClick={() => dispatch(toggleVideo(null))}\n        />\n      </Box>\n    </ShadowBox>\n  );\n};\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/Sketch.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport clsx from \"clsx\";\nimport ShadowBox from \"@arpitbhalla/trio-calls/components/ShadowBox\"; // Icon\n\nimport BrushOutlinedIcon from \"@material-ui/icons/BrushOutlined\";\nimport FormatPaintOutlinedIcon from \"@material-ui/icons/FormatPaintOutlined\";\nimport UndoOutlinedIcon from \"@material-ui/icons/UndoOutlined\";\nimport RedoOutlinedIcon from \"@material-ui/icons/RedoOutlined\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport GetAppOutlinedIcon from \"@material-ui/icons/GetAppOutlined\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { toggleWhiteBoard } from \"core/reducers/media\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction downloadFile(fileName, data) {\n  const linkSource = \"data:jpg;base64\" + data;\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = linkSource;\n  downloadLink.download = fileName;\n  downloadLink.click();\n}\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    marginBottom: theme.spacing(3)\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  activeTool: {\n    backgroundColor: theme.palette.action.focus\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  //@ts-ignore\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nconst Sketch = () => {\n  _s();\n\n  const classes = useStyles();\n  const [color, setColor] = React.useState(\"red\");\n  const [size, setSize] = React.useState(4);\n  const [tool, setTool] = React.useState(\"\");\n  const sketchRef = React.useRef(null);\n  const dispatch = useAppDispatch();\n  const open = useAppSelector(state => state.mediaReducer.isWhiteBoard);\n\n  const onClose = () => {\n    dispatch(toggleWhiteBoard(false));\n  };\n\n  const tools = [[\"Draw\", BrushOutlinedIcon, () => {\n    var _sketchRef$current;\n\n    setTool(\"Draw\");\n    (_sketchRef$current = sketchRef.current) === null || _sketchRef$current === void 0 ? void 0 : _sketchRef$current.eraseMode(false);\n  }], [\"Erase\", FormatPaintOutlinedIcon, () => {\n    var _sketchRef$current2;\n\n    setTool(\"Erase\");\n    (_sketchRef$current2 = sketchRef.current) === null || _sketchRef$current2 === void 0 ? void 0 : _sketchRef$current2.eraseMode(true);\n  }], [\"Undo\", UndoOutlinedIcon, () => {\n    var _sketchRef$current3;\n\n    return (_sketchRef$current3 = sketchRef.current) === null || _sketchRef$current3 === void 0 ? void 0 : _sketchRef$current3.undo();\n  }], [\"Redo\", RedoOutlinedIcon, () => {\n    var _sketchRef$current4;\n\n    return (_sketchRef$current4 = sketchRef.current) === null || _sketchRef$current4 === void 0 ? void 0 : _sketchRef$current4.redo();\n  }], [\"Clean\", DeleteOutlineIcon, () => {\n    var _sketchRef$current5;\n\n    return (_sketchRef$current5 = sketchRef.current) === null || _sketchRef$current5 === void 0 ? void 0 : _sketchRef$current5.clearCanvas();\n  }], [\"Download\", GetAppOutlinedIcon, () => {\n    var _sketchRef$current6;\n\n    return (_sketchRef$current6 = sketchRef.current) === null || _sketchRef$current6 === void 0 ? void 0 : _sketchRef$current6.exportImage(\"jpeg\").then(e => downloadFile(\"Trio Calls.jpg\", e));\n  }]];\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: onClose // @ts-ignore\n    ,\n    TransitionComponent: Transition,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          onClick: onClose,\n          \"aria-label\": \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          children: \"White Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: tools.map(_ref => {\n            let [title, Icon, handler] = _ref;\n            return /*#__PURE__*/_jsxDEV(Tooltip, {\n              placement: \"right\",\n              title: title,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": title,\n                onClick: handler,\n                className: clsx(title === tool && classes.activeTool),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  color: \"action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 11,\n          children: /*#__PURE__*/_jsxDEV(ShadowBox, {\n            children: /*#__PURE__*/_jsxDEV(ReactSketchCanvas, {\n              ref: sketchRef,\n              style: {},\n              height: \"450px\",\n              strokeWidth: size,\n              eraserWidth: size,\n              strokeColor: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [\"red\", \"green\", \"#e7e700\", \"blue\", \"purple\", \"orange\"].map(item => /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                backgroundColor: item,\n                margin: 5\n              },\n              onClick: () => {\n                setColor(item);\n              }\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              value: size,\n              onChange: (_event, value) => setSize(value),\n              \"aria-labelledby\": \"pencil size\",\n              min: 2,\n              max: 40\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sketch, \"c8/nR9aC8odfgUInkuxVcnX5xQs=\", false, function () {\n  return [useStyles, useAppDispatch, useAppSelector];\n});\n\n_c3 = Sketch;\nexport default Sketch;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Sketch\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/Sketch.tsx"],"names":["React","makeStyles","Dialog","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","ReactSketchCanvas","Slider","Grid","Container","Tooltip","clsx","ShadowBox","BrushOutlinedIcon","FormatPaintOutlinedIcon","UndoOutlinedIcon","RedoOutlinedIcon","DeleteOutlineIcon","GetAppOutlinedIcon","useAppDispatch","useAppSelector","toggleWhiteBoard","downloadFile","fileName","data","linkSource","downloadLink","document","createElement","href","download","click","useStyles","theme","appBar","position","marginBottom","spacing","title","marginLeft","flex","activeTool","backgroundColor","palette","action","focus","Transition","forwardRef","props","ref","Sketch","classes","color","setColor","useState","size","setSize","tool","setTool","sketchRef","useRef","dispatch","open","state","mediaReducer","isWhiteBoard","onClose","tools","current","eraseMode","undo","redo","clearCanvas","exportImage","then","e","map","Icon","handler","item","margin","_event","value"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport clsx from \"clsx\";\nimport ShadowBox from \"@arpitbhalla/trio-calls/components/ShadowBox\";\n// Icon\nimport BrushOutlinedIcon from \"@material-ui/icons/BrushOutlined\";\nimport FormatPaintOutlinedIcon from \"@material-ui/icons/FormatPaintOutlined\";\nimport UndoOutlinedIcon from \"@material-ui/icons/UndoOutlined\";\nimport RedoOutlinedIcon from \"@material-ui/icons/RedoOutlined\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport GetAppOutlinedIcon from \"@material-ui/icons/GetAppOutlined\";\nimport { useAppDispatch, useAppSelector } from \"core/hooks/redux\";\nimport { toggleWhiteBoard } from \"core/reducers/media\";\n\nfunction downloadFile(fileName: string, data: string): void {\n  const linkSource = \"data:jpg;base64\" + data;\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = linkSource;\n  downloadLink.download = fileName;\n  downloadLink.click();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n    marginBottom: theme.spacing(3),\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  activeTool: {\n    backgroundColor: theme.palette.action.focus,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  //@ts-ignore\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Sketch: React.FC = () => {\n  const classes = useStyles();\n  const [color, setColor] = React.useState(\"red\");\n  const [size, setSize] = React.useState(4);\n  const [tool, setTool] = React.useState(\"\");\n  const sketchRef = React.useRef<ReactSketchCanvas | null>(null);\n  const dispatch = useAppDispatch();\n  const open = useAppSelector((state) => state.mediaReducer.isWhiteBoard);\n\n  const onClose = () => {\n    dispatch(toggleWhiteBoard(false));\n  };\n\n  const tools: [\n    string,\n    typeof BrushOutlinedIcon,\n    React.MouseEventHandler<HTMLButtonElement>\n  ][] = [\n    [\n      \"Draw\",\n      BrushOutlinedIcon,\n      () => {\n        setTool(\"Draw\");\n        sketchRef.current?.eraseMode(false);\n      },\n    ],\n    [\n      \"Erase\",\n      FormatPaintOutlinedIcon,\n      () => {\n        setTool(\"Erase\");\n        sketchRef.current?.eraseMode(true);\n      },\n    ],\n    [\"Undo\", UndoOutlinedIcon, () => sketchRef.current?.undo()],\n    [\"Redo\", RedoOutlinedIcon, () => sketchRef.current?.redo()],\n    [\"Clean\", DeleteOutlineIcon, () => sketchRef.current?.clearCanvas()],\n    [\n      \"Download\",\n      GetAppOutlinedIcon,\n      () =>\n        sketchRef.current\n          ?.exportImage(\"jpeg\")\n          .then((e) => downloadFile(\"Trio Calls.jpg\", e)),\n    ],\n  ];\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={onClose}\n      // @ts-ignore\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={onClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            White Board\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={1}>\n          <Grid item xs={1}>\n            {tools.map(([title, Icon, handler]) => (\n              <Tooltip placement=\"right\" title={title} key={title}>\n                <IconButton\n                  aria-label={title}\n                  onClick={handler}\n                  className={clsx(title === tool && classes.activeTool)}\n                >\n                  <Icon color=\"action\" />\n                </IconButton>\n              </Tooltip>\n            ))}\n          </Grid>\n          <Grid item xs={11}>\n            <ShadowBox>\n              <ReactSketchCanvas\n                ref={sketchRef}\n                style={{}}\n                height=\"450px\"\n                strokeWidth={size}\n                eraserWidth={size}\n                strokeColor={color}\n              />\n            </ShadowBox>\n          </Grid>\n        </Grid>\n        <Container maxWidth=\"sm\">\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              {[\"red\", \"green\", \"#e7e700\", \"blue\", \"purple\", \"orange\"].map(\n                (item) => (\n                  <IconButton\n                    style={{ backgroundColor: item, margin: 5 }}\n                    key={item}\n                    onClick={() => {\n                      setColor(item);\n                    }}\n                  />\n                )\n              )}\n            </Grid>\n            <Grid item xs={6}>\n              <Slider\n                value={size}\n                onChange={(_event, value) => setSize(value as number)}\n                aria-labelledby=\"pencil size\"\n                min={2}\n                max={40}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </Container>\n    </Dialog>\n  );\n};\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/chat/components/ChatParticipants.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport clsx from \"clsx\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ChatParticipantSkeleton } from \"@arpitbhalla/trio-calls/components/Chat/ChatSkeleton\";\nimport { getAllMeets } from \"@arpitbhalla/trio-calls/utils/chat.fetch\";\nimport { useSnackbar } from \"notistack\";\nimport { useStyles } from \"./styles/ChatParticipants\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { dateToTime } from \"@arpitbhalla/trio-calls/utils/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatParticipants = _ref => {\n  _s();\n\n  var _meets$filter;\n\n  let {\n    handleTitle\n  } = _ref;\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    meetID\n  } = useParams();\n  const [loading, setLoading] = React.useState(true);\n  const [meets, setMeets] = React.useState([]);\n  const [search, setSearch] = React.useState(\"\");\n  const UID = useAppSelector(state => state.authReducer.UID);\n  React.useEffect(() => {\n    getAllMeets(UID).then(meets => {\n      setMeets(meets);\n      setLoading(false);\n    }).catch(err => {\n      enqueueSnackbar(err || \"Something went wrong\", {\n        variant: \"error\"\n      });\n    });\n  }, []);\n\n  const filterChats = chat => {\n    var _chat$title;\n\n    return search ? (_chat$title = chat.title) === null || _chat$title === void 0 ? void 0 : _chat$title.includes(search) : true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      placeholder: \"Search\",\n      margin: \"dense\",\n      value: search,\n      onChange: event => setSearch(event.target.value),\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.chatRoot,\n      children: loading ? [...new Array(5)].map((e, i) => /*#__PURE__*/_jsxDEV(ChatParticipantSkeleton, {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }, this)) : meets.length && (meets === null || meets === void 0 ? void 0 : (_meets$filter = meets.filter(filterChats)) === null || _meets$filter === void 0 ? void 0 : _meets$filter.map((meet, key) => {\n        var _meet$chat, _meet$chat$, _meet$chat2, _meet$chat2$;\n\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => {\n            history.push(`/chat/${meet.meetID}`);\n            handleTitle === null || handleTitle === void 0 ? void 0 : handleTitle(meet.title);\n          },\n          className: clsx({\n            [classes.selectedListItem]: meetID === meet.meetID\n          }),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.avatar,\n              children: String(meet.title || \"\").toUpperCase()[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.secondary,\n              variant: \"subtitle2\",\n              color: \"textSecondary\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: meet.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: dateToTime(meet === null || meet === void 0 ? void 0 : (_meet$chat = meet.chat) === null || _meet$chat === void 0 ? void 0 : (_meet$chat$ = _meet$chat[0]) === null || _meet$chat$ === void 0 ? void 0 : _meet$chat$.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: [String(((_meet$chat2 = meet.chat) === null || _meet$chat2 === void 0 ? void 0 : (_meet$chat2$ = _meet$chat2[0]) === null || _meet$chat2$ === void 0 ? void 0 : _meet$chat2$.message) || \"\").slice(0, 35), \"\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatParticipants, \"ci4Thamx2vdHAxXgEjXbG6OgZxg=\", false, function () {\n  return [useStyles, useHistory, useSnackbar, useParams, useAppSelector];\n});\n\n_c = ChatParticipants;\nexport default _c2 = /*#__PURE__*/React.memo(ChatParticipants);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatParticipants\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/chat/components/ChatParticipants.tsx"],"names":["React","List","ListItemAvatar","Avatar","Typography","ListItem","ListItemText","clsx","TextField","InputAdornment","SearchIcon","useHistory","useParams","ChatParticipantSkeleton","getAllMeets","useSnackbar","useStyles","useAppSelector","dateToTime","ChatParticipants","handleTitle","classes","history","enqueueSnackbar","meetID","loading","setLoading","useState","meets","setMeets","search","setSearch","UID","state","authReducer","useEffect","then","catch","err","variant","filterChats","chat","title","includes","event","target","value","startAdornment","chatRoot","Array","map","e","i","length","filter","meet","key","push","selectedListItem","avatar","String","toUpperCase","secondary","createdAt","message","slice","memo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport clsx from \"clsx\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ChatParticipantSkeleton } from \"@arpitbhalla/trio-calls/components/Chat/ChatSkeleton\";\nimport { getAllMeets } from \"@arpitbhalla/trio-calls/utils/chat.fetch\";\nimport { useSnackbar } from \"notistack\";\nimport { Meeting } from \"@arpitbhalla/trio-calls/utils/types\";\nimport { useStyles } from \"./styles/ChatParticipants\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { dateToTime } from \"@arpitbhalla/trio-calls/utils/common\";\n\ntype Props = {\n  handleTitle?: (title: string) => unknown;\n};\nconst ChatParticipants: React.FC<Props> = ({ handleTitle }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const { meetID } = useParams<{ meetID: string }>();\n  const [loading, setLoading] = React.useState(true);\n  const [meets, setMeets] = React.useState<Meeting[]>([]);\n  const [search, setSearch] = React.useState(\"\");\n  const UID = useAppSelector((state) => state.authReducer.UID);\n\n  React.useEffect(() => {\n    getAllMeets(UID)\n      .then((meets) => {\n        setMeets(meets);\n        setLoading(false);\n      })\n      .catch((err) => {\n        enqueueSnackbar(err || \"Something went wrong\", {\n          variant: \"error\",\n        });\n      });\n  }, []);\n\n  const filterChats = (chat: Meeting) => {\n    return search ? chat.title?.includes(search) : true;\n  };\n\n  return (\n    <div>\n      <TextField\n        variant=\"outlined\"\n        placeholder=\"Search\"\n        margin=\"dense\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <List className={classes.chatRoot}>\n        {loading\n          ? [...new Array(5)].map((e, i) => <ChatParticipantSkeleton key={i} />)\n          : meets.length &&\n            meets?.filter(filterChats)?.map((meet, key) => (\n              <ListItem\n                key={key}\n                button\n                onClick={() => {\n                  history.push(`/chat/${meet.meetID}`);\n                  handleTitle?.(meet.title);\n                }}\n                className={clsx({\n                  [classes.selectedListItem]: meetID === meet.meetID,\n                })}\n              >\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    {String(meet.title || \"\").toUpperCase()[0]}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={\n                    <Typography\n                      className={classes.secondary}\n                      variant=\"subtitle2\"\n                      color=\"textSecondary\"\n                    >\n                      <b>{meet.title}</b>\n                      <b>{dateToTime(meet?.chat?.[0]?.createdAt)}</b>\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography variant=\"caption\">\n                      {String(meet.chat?.[0]?.message || \"\").slice(0, 35)}\n                      &nbsp;\n                    </Typography>\n                  }\n                />\n              </ListItem>\n            ))}\n      </List>\n    </div>\n  );\n};\nexport default React.memo(ChatParticipants);\n"]},"metadata":{},"sourceType":"module"}
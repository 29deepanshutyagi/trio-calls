{"ast":null,"code":"var _jsxFileName = \"/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/SidePanel/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport clsx from \"clsx\";\nimport Box from \"@material-ui/core/Box\";\nimport { InfoOutlined, ChatOutlined, PeopleOutlineOutlined, Close, AssessmentOutlined } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport loadable from \"@loadable/component\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { useStyles } from \"./useStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = loadable(_c = () => import(\"./ChatBox\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this)\n});\n_c2 = Chat;\nconst Participants = loadable(_c3 = () => import(\"./Participants\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this)\n});\n_c4 = Participants;\nconst MeetInfo = loadable(_c5 = () => import(\"./Info\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this)\n});\n_c6 = MeetInfo;\nconst Polls = loadable(_c7 = () => import(\"./Polls\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this)\n});\n_c8 = Polls;\nconst LockMeet = loadable(_c9 = () => import(\"./LockMeet\"), {\n  fallback: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this)\n});\n_c10 = LockMeet;\n\nconst SideBar = _ref => {\n  _s();\n\n  let {\n    open,\n    setOpen\n  } = _ref;\n  const classes = useStyles();\n  const [index, setIndex] = React.useState(0);\n  const {\n    participants,\n    meetDetails,\n    poll,\n    chat\n  } = useAppSelector(state => ({ ...state.meetReducer,\n    ...state.chatReducer\n  }));\n\n  const handleIconPress = key => () => {\n    if (!open) {\n      setOpen(true);\n    } else if (open && key === index) {\n      setOpen(false);\n    }\n\n    setIndex(key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"temporary\",\n      anchor: \"right\",\n      open: open,\n      elevation: 0,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      style: {\n        width: \"460px\"\n      },\n      onClose: () => setOpen(false),\n      ModalProps: {\n        hideBackdrop: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Meeting Details\", \"People\", \"In-call messages\", \"Polls\"][index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"\",\n          onClick: () => setOpen(false),\n          children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 1,\n        children: (() => {\n          switch (index) {\n            case 0:\n              return /*#__PURE__*/_jsxDEV(MeetInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 24\n              }, this);\n\n            case 1:\n              return /*#__PURE__*/_jsxDEV(Participants, {\n                isHost: meetDetails.isHost,\n                participants: participants\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this);\n\n            case 2:\n              return /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 24\n              }, this);\n\n            case 3:\n              return /*#__PURE__*/_jsxDEV(Polls, {\n                isHost: meetDetails.isHost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 24\n              }, this);\n\n            default:\n              return null;\n          }\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.controller,\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Meet Info\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleIconPress(0),\n          className: clsx(open && index === 0 && classes.selected),\n          children: /*#__PURE__*/_jsxDEV(InfoOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Participants\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleIconPress(1),\n          className: clsx(open && index === 1 && classes.selected),\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: Object.values(participants).filter(_ref2 => {\n              let {\n                isAvail\n              } = _ref2;\n              return isAvail;\n            }).length + 1,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(PeopleOutlineOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Chats\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleIconPress(2),\n          className: clsx(open && index === 2 && classes.selected),\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            color: \"primary\",\n            variant: \"dot\",\n            invisible: !chat.length,\n            children: /*#__PURE__*/_jsxDEV(ChatOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Polls\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleIconPress(3),\n          className: clsx(open && index === 3 && classes.selected),\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            color: \"primary\",\n            variant: \"dot\",\n            invisible: !poll.question,\n            children: /*#__PURE__*/_jsxDEV(AssessmentOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), (meetDetails.isHost || process.env.NODE_ENV === \"development\") && /*#__PURE__*/_jsxDEV(LockMeet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SideBar, \"A/OKuKQDsjWsUoq9F/zRLJafzu8=\", false, function () {\n  return [useStyles, useAppSelector];\n});\n\n_c11 = SideBar;\nexport default _c12 = /*#__PURE__*/React.memo(SideBar);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Chat$loadable\");\n$RefreshReg$(_c2, \"Chat\");\n$RefreshReg$(_c3, \"Participants$loadable\");\n$RefreshReg$(_c4, \"Participants\");\n$RefreshReg$(_c5, \"MeetInfo$loadable\");\n$RefreshReg$(_c6, \"MeetInfo\");\n$RefreshReg$(_c7, \"Polls$loadable\");\n$RefreshReg$(_c8, \"Polls\");\n$RefreshReg$(_c9, \"LockMeet$loadable\");\n$RefreshReg$(_c10, \"LockMeet\");\n$RefreshReg$(_c11, \"SideBar\");\n$RefreshReg$(_c12, \"%default%\");","map":{"version":3,"sources":["/home/deepanshu/Documents/trio-calls/client/src/pages/meet/dashboard/components/SidePanel/index.tsx"],"names":["React","clsx","Box","InfoOutlined","ChatOutlined","PeopleOutlineOutlined","Close","AssessmentOutlined","IconButton","Tooltip","Typography","Badge","Drawer","LinearProgress","loadable","useAppSelector","useStyles","Chat","fallback","Participants","MeetInfo","Polls","LockMeet","SideBar","open","setOpen","classes","index","setIndex","useState","participants","meetDetails","poll","chat","state","meetReducer","chatReducer","handleIconPress","key","paper","drawerPaper","width","hideBackdrop","isHost","controller","selected","Object","values","filter","isAvail","length","question","process","env","NODE_ENV","memo"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport clsx from \"clsx\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n  InfoOutlined,\n  ChatOutlined,\n  PeopleOutlineOutlined,\n  Close,\n  AssessmentOutlined,\n} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport loadable from \"@loadable/component\";\nimport { useAppSelector } from \"core/hooks/redux\";\nimport { useStyles } from \"./useStyles\";\n\nconst Chat = loadable(() => import(\"./ChatBox\"), {\n  fallback: <LinearProgress />,\n});\nconst Participants = loadable(() => import(\"./Participants\"), {\n  fallback: <LinearProgress />,\n});\nconst MeetInfo = loadable(() => import(\"./Info\"), {\n  fallback: <LinearProgress />,\n});\nconst Polls = loadable(() => import(\"./Polls\"), {\n  fallback: <LinearProgress />,\n});\nconst LockMeet = loadable(() => import(\"./LockMeet\"), {\n  fallback: <LinearProgress />,\n});\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst SideBar: React.FC<Props> = ({ open, setOpen }) => {\n  const classes = useStyles();\n  const [index, setIndex] = React.useState(0);\n\n  const { participants, meetDetails, poll, chat } = useAppSelector((state) => ({\n    ...state.meetReducer,\n    ...state.chatReducer,\n  }));\n\n  const handleIconPress = (key: number) => () => {\n    if (!open) {\n      setOpen(true);\n    } else if (open && key === index) {\n      setOpen(false);\n    }\n    setIndex(key);\n  };\n\n  return (\n    <>\n      <Drawer\n        variant=\"temporary\"\n        anchor=\"right\"\n        open={open}\n        elevation={0}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        style={{ width: \"460px\" }}\n        onClose={() => setOpen(false)}\n        ModalProps={{\n          hideBackdrop: true,\n        }}\n      >\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"h6\">\n            {[\"Meeting Details\", \"People\", \"In-call messages\", \"Polls\"][index]}\n          </Typography>\n          <IconButton aria-label=\"\" onClick={() => setOpen(false)}>\n            <Close />\n          </IconButton>\n        </Box>\n        <Box p={1}>\n          {(() => {\n            switch (index) {\n              case 0:\n                return <MeetInfo />;\n              case 1:\n                return (\n                  <Participants\n                    isHost={meetDetails.isHost}\n                    participants={participants}\n                  />\n                );\n              case 2:\n                return <Chat />;\n              case 3:\n                return <Polls isHost={meetDetails.isHost} />;\n              default:\n                return null;\n            }\n          })()}\n        </Box>\n      </Drawer>\n\n      <Box className={classes.controller}>\n        <Tooltip title=\"Meet Info\">\n          <IconButton\n            onClick={handleIconPress(0)}\n            className={clsx(open && index === 0 && classes.selected)}\n          >\n            <InfoOutlined />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Participants\">\n          <IconButton\n            onClick={handleIconPress(1)}\n            className={clsx(open && index === 1 && classes.selected)}\n          >\n            <Badge\n              badgeContent={\n                Object.values(participants).filter(({ isAvail }) => isAvail)\n                  .length + 1\n              }\n              color=\"primary\"\n            >\n              <PeopleOutlineOutlined />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Chats\">\n          <IconButton\n            onClick={handleIconPress(2)}\n            className={clsx(open && index === 2 && classes.selected)}\n          >\n            <Badge color=\"primary\" variant=\"dot\" invisible={!chat.length}>\n              <ChatOutlined />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Polls\">\n          <IconButton\n            onClick={handleIconPress(3)}\n            className={clsx(open && index === 3 && classes.selected)}\n          >\n            <Badge color=\"primary\" variant=\"dot\" invisible={!poll.question}>\n              <AssessmentOutlined />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n        {(meetDetails.isHost || process.env.NODE_ENV === \"development\") && (\n          <LockMeet />\n        )}\n      </Box>\n    </>\n  );\n};\nexport default React.memo(SideBar);\n"]},"metadata":{},"sourceType":"module"}